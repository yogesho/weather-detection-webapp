# =============================================================================
# WEATHER DETECTION WEBAPP CONFIGURATION
# =============================================================================

# Server Configuration
# The port on which the application will run
# Heroku will set PORT environment variable
server.port=${PORT:8080}

# Application Name
spring.application.name=Weather Detection WebApp

# =============================================================================
# JSP CONFIGURATION
# =============================================================================

# JSP View Resolver Configuration
# This tells Spring Boot where to find JSP files
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# Enable JSP processing
spring.web.resources.add-mappings=true

# =============================================================================
# OPENWEATHERMAP API CONFIGURATION
# =============================================================================

# OpenWeatherMap API Base URL
# This is the base URL for all OpenWeatherMap API calls
weather.api.base-url=https://api.openweathermap.org/data/2.5

# OpenWeatherMap API Key
# IMPORTANT: Replace with your actual API key from https://openweathermap.org/api
# New API keys take 2-4 hours to activate
weather.api.key=************************

# Temperature Units (metric, imperial, kelvin)
# metric = Celsius, imperial = Fahrenheit, kelvin = Kelvin
weather.api.units=metric

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Caffeine Cache Configuration
# This configures caching for weather data to improve performance
spring.cache.type=caffeine
spring.cache.cache-names=weather-cache
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=30m

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging Level Configuration
# Controls the verbosity of application logs
logging.level.com.weatherapp=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.cache=DEBUG

# Logging Pattern
# Defines the format of log messages
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Enable Spring Boot DevTools
# Provides automatic restart and live reload during development
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# =============================================================================
# ERROR HANDLING CONFIGURATION
# =============================================================================

# Error Page Configuration
# Custom error pages for different HTTP status codes
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

# =============================================================================
# SECURITY CONFIGURATION (Optional)
# =============================================================================

# JWT Secret (for future authentication features)
# jwt.secret=your_jwt_secret_key_here
# jwt.expiration=86400000

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Connection Pool Configuration
# Optimizes HTTP client connections to external APIs
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=25

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Actuator Endpoints (for monitoring)
# management.endpoints.web.exposure.include=health,info,metrics
# management.endpoint.health.show-details=always
